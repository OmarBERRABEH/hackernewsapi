// <auto-generated />
using hackernewsapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace hackernewsapi.Migrations
{
    [DbContext(typeof(hackernewsapiContext))]
    [Migration("20180330140709_ml")]
    partial class ml
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hackernews.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("PostTypeID");

                    b.Property<int>("Score");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("ID");

                    b.HasIndex("PostTypeID");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("hackernews.Models.PostType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("PostType");
                });

            modelBuilder.Entity("hackernews.Models.Post", b =>
                {
                    b.HasOne("hackernews.Models.PostType", "PostType")
                        .WithMany("Posts")
                        .HasForeignKey("PostTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
